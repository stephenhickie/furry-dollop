{
  "swagger" : "2.0",
  "info" : {
    "description" : "The PEARL service offers a number of REST operations for extracting output from or sending input to the system in a standardized way.\n\nThe most important calls are listed in this document.\n\n## Executing PEARL API calls\n\nAll the calls listed below, except for retrieving the token, are relative to the base URL:\n\n`[scheme]://[domain-name]:[port]/pearl-api/resources`\n\nWhen a call is listed here as 'GET /prlba', that means a GET request to for example:\n\n`https://pearl:7001/pearl-api/resources/prlba`\n\n## Parameter: Data Source\n\nThe *datasource* query parameter is required to determine on which data source (schema) the REST operation should be performed. Data sources are configured in WebLogic under Data Sources.\n\nThe value which must be filled in is the part after the slash (/) in the JNDI Name for that data source. \nEg: for a data source with JNDI Name 'jdbc/PEARL_PROD' the value for *datasource* is 'PEARL_PROD'.\n\nNote that the user must be authorized for this data source, otherwise the HTTP status code 403 (Forbidden) will be returned for REST operations.\n\n## Header: User-Agent\n\nIt is mandatory to set the `User-Agent` HTTP request header to a value which is whitelisted by PEARL.\n\nThis whitelist is managed by Ortec Finance. Please contact Ortec Finance to ask which value to use or to have the User-Agent value of third-party software added to the whitelist.\n\nNote that when no value, or an invalid value is used for the `User-Agent` header, a HTTP status code 403 (Forbidden) will be returned for REST operations, with this message: `Client not authorized`.\n\n##Authentication and Authorization \n\nThe REST operations listed in this documentation will not work without a valid access token and refresh token from the Token Service.\n\n### Access token and refresh token\n\nIn order to retrieve these tokens from the Token Service, use the following REST operation:\n\n`[scheme]://[domain-name]:[port]/auth/api/token`\n\nfor example:\n\n`https://pearl.domain.com:7001/auth/api/token`\n\nNote that valid credentials must be provided (eg. using 'basic authentication' or 'SAML 2.0', depending on the PEARL configuration).\n\nExecuting the REST operation results in a JSON response. \n\nThe field `accessToken` contains the required access token. This access token has a short lifetime (minutes).\n\nThe field `refreshToken` contains the required refresh token. This refresh token has a longer lifetime (hours).\n\nOnce the two tokens are received, both must be sent with the PEARL API REST operation as a HTTP cookies named `accessToken` and `refreshToken` with the correct tokens as value and `/` as path and the correct domain eg. `pearl.domain.com`in the example.\n\nWithout these two valid tokens the PEARL API REST operations will result in a HTTP status code 401 (Unauthorized). \n\n### Refreshing access token\n\nThe access token is valid for a limited time. When the access token is expired either a new token can be retrieved using the `/auth/api/token` endpoint, or it may be refreshed using the following endpoint.\n\n`[scheme]://[domain-name]:[port]/auth/api/refresh`\n\nfor example:\n\n`https://pearl.domain.com:7001/auth/api/refresh`\n\nIn order to refresh the access token, the previous access token and current refresh tokens must be sent as a HTTP cookies named `accessToken` and `refreshToken` with the correct tokens as value and `/` as path and the correct domain eg. `pearl.domain.com`in the example.\n",
    "version" : "8.4",
    "title" : "PEARL Service REST documentation"
  },
  "basePath" : "/pearl-api/resources",
  "tags" : [ {
    "name" : "01 Breakdown Attribution",
    "description" : "Report request"
  }, {
    "name" : "02 Breakdown Attribution Time Series",
    "description" : "Report request"
  }, {
    "name" : "03 Fund Hierarchy",
    "description" : "Report request"
  }, {
    "name" : "04 Fund Hierarchy Time Series",
    "description" : "Report request"
  }, {
    "name" : "05 General Data View",
    "description" : "Report request"
  }, {
    "name" : "06 Fixed Income Attribution",
    "description" : "Report request"
  }, {
    "name" : "07 Fixed Income Attribution Time Series",
    "description" : "Report request"
  }, {
    "name" : "08 Decision",
    "description" : "Report request"
  }, {
    "name" : "09 Decision Time Series",
    "description" : "Report request"
  }, {
    "name" : "10 Currency Overlay",
    "description" : "Report request"
  }, {
    "name" : "11 Currency Overlay Time Series",
    "description" : "Report request"
  }, {
    "name" : "12 GIPS",
    "description" : "Report request"
  }, {
    "name" : "13 GIPS Time Series",
    "description" : "Report request"
  }, {
    "name" : "14 GIPS Disclosures",
    "description" : "Disclosures request"
  }, {
    "name" : "15 GIPS Data View",
    "description" : "Report request"
  }, {
    "name" : "16 Jobs",
    "description" : "Create and manage jobs"
  }, {
    "name" : "17 Runs",
    "description" : "Create and manage runs"
  }, {
    "name" : "18 Executables",
    "description" : "View all executables"
  }, {
    "name" : "19 Notifications",
    "description" : "View notifications"
  } ],
  "paths" : {
    "/accountsets" : {
      "get" : {
        "operationId" : "getAllAccountSets",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/api-instance" : {
      "get" : {
        "operationId" : "getApiInstance",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions" : {
      "get" : {
        "operationId" : "getAttributionOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createAttributionAnalysis",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "updateAttributionAnalysis",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions/columns" : {
      "get" : {
        "operationId" : "getAllAvailableAnalysisColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions/defaults" : {
      "get" : {
        "operationId" : "getAttributionDefaultValues",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions/delete" : {
      "put" : {
        "operationId" : "deleteAttributionAnalyses",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions/model-variants" : {
      "get" : {
        "operationId" : "getModelVariants",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions/templates" : {
      "get" : {
        "operationId" : "getAttributionTemplateOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createAttributionTemplate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "updateAttributionTemplate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions/templates/columns" : {
      "get" : {
        "operationId" : "getAllAvailableAttributionColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions/templates/delete" : {
      "put" : {
        "operationId" : "deleteAttributionTemplates",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions/templates/search" : {
      "get" : {
        "operationId" : "searchAttributionTemplates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions/templates/{attributionId}" : {
      "get" : {
        "operationId" : "getAttributionTemplate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "attributionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/attributions/{analysisId}" : {
      "get" : {
        "operationId" : "getAttributionAnalysis",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "analysisId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/authorized-fund-sets" : {
      "get" : {
        "operationId" : "getAuthorizedFundSets",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/authorized-modules" : {
      "get" : {
        "operationId" : "getAuthorizedModulesForUser",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-overview" : {
      "get" : {
        "operationId" : "getCheckOverviewDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "groupBy",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "INDIVIDUAL_CHECK"
        }, {
          "name" : "since",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "ALL"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-overview/sign-off-state" : {
      "get" : {
        "operationId" : "getSignOffStates",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "changeState",
        "consumes" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-overview/sign-off-state/export" : {
      "get" : {
        "operationId" : "exportSignOffStates",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clientTimeZone",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-overview/summary" : {
      "get" : {
        "operationId" : "getCheckOverviewSummary",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-results" : {
      "get" : {
        "operationId" : "getCheckResultsForOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int64"
        }, {
          "name" : "lastRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editCheckResultDetails",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-results/bulk-delete" : {
      "put" : {
        "operationId" : "deleteMultipleCheckResults",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-results/bulk-delete-all" : {
      "put" : {
        "operationId" : "deleteAllCheckResults",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-results/bulk-edit" : {
      "put" : {
        "operationId" : "editMultipleCheckResults",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-results/bulk-edit-all" : {
      "put" : {
        "operationId" : "editAllCheckResults",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-results/columns" : {
      "get" : {
        "operationId" : "getCheckResultOverviewColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-results/export" : {
      "get" : {
        "operationId" : "exportCheckResultsOverview",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int64"
        }, {
          "name" : "lastRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        }, {
          "name" : "clientTimeZone",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-results/{checkResultId}" : {
      "get" : {
        "operationId" : "getCheckResultDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "checkResultId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/check-results/{checkResultId}/columns" : {
      "get" : {
        "operationId" : "getCheckResultColumns",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "checkResultId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composite-derived-values" : {
      "get" : {
        "operationId" : "getDerivedValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "compositeId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editDerivedValues",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composite-derived-values/delete" : {
      "put" : {
        "operationId" : "deleteDerivedValues",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composite-derived-weights" : {
      "get" : {
        "operationId" : "getDerivedWeights",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "compositeId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editDerivedWeights",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composite-derived-weights/delete" : {
      "put" : {
        "operationId" : "deleteDerivedWeights",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composite-input-values" : {
      "get" : {
        "operationId" : "getInputValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "compositeId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editInputValues",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composite-input-values/delete" : {
      "put" : {
        "operationId" : "deleteInputValues",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composite-input-weights" : {
      "get" : {
        "operationId" : "getInputWeights",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "compositeId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editInputWeights",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composite-input-weights/delete" : {
      "put" : {
        "operationId" : "deleteInputWeights",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composites/composite-link" : {
      "get" : {
        "operationId" : "getCompositeParentOfIndex",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "indexId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composites/copy" : {
      "post" : {
        "operationId" : "copyComposite",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composites/search-children" : {
      "get" : {
        "operationId" : "searchCompositeChildren",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "compositeId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeSelf",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "default" : "false"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composites/{compositeId}/audit-trail" : {
      "get" : {
        "operationId" : "getAuditTrailForComposite",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "compositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composites/{compositeId}/audit-trail/export" : {
      "get" : {
        "operationId" : "exportFundAuditTrail",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "compositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clientTimeZone",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composites/{compositeId}/structure-data" : {
      "get" : {
        "operationId" : "getCompositeStructureData",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "compositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editCompositeStructureData",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "compositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "operationId" : "deleteCompositeStructure",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "compositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composites/{indexId}" : {
      "delete" : {
        "operationId" : "deleteStructureNode",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "indexId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/composites/{nodeId}/parent-trees-in-periods" : {
      "get" : {
        "operationId" : "getValidation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "gaps",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/constituents" : {
      "get" : {
        "operationId" : "getConstituentBenchmarksForOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createConstituentBenchmark",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editConstituentBenchmark",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/constituents/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/constituents/defaults" : {
      "get" : {
        "operationId" : "getConstituentBenchmarkDefaultConfiguration",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/constituents/delete" : {
      "put" : {
        "operationId" : "deleteConstituentBenchmarks",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/constituents/search" : {
      "get" : {
        "operationId" : "searchConstituentBenchmarks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/constituents/{bmId}" : {
      "get" : {
        "operationId" : "getConstituentBenchmark",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "bmId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/currency-derived-weights" : {
      "get" : {
        "operationId" : "getCurrencyDerivedWeights",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "indexId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editDerivedWeights",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/currency-derived-weights/delete" : {
      "put" : {
        "operationId" : "deleteDerivedWeights",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/currency-input-weights" : {
      "get" : {
        "operationId" : "getCurrencyInputWeights",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "indexId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editCurrencyInputWeights",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/currency-input-weights/delete" : {
      "put" : {
        "operationId" : "deleteCurrencyInputWeights",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/customdata/categories" : {
      "get" : {
        "operationId" : "getInputDataCategories",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/customdata/column-definitions" : {
      "get" : {
        "operationId" : "getColumnDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/customdata/data" : {
      "get" : {
        "operationId" : "getData",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lastRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/customdata/data/delete" : {
      "put" : {
        "operationId" : "deleteData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/customdata/data/delete-all" : {
      "put" : {
        "operationId" : "deleteAllData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/customdata/export/{table}" : {
      "get" : {
        "operationId" : "exportCustomData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clientTimeZone",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/customdata/import" : {
      "post" : {
        "operationId" : "importInputData",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/octet-stream" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/customdata/search" : {
      "get" : {
        "operationId" : "getSearchValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "tableName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "columnName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/customdata/tables" : {
      "get" : {
        "operationId" : "getAdvancedTables",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "category",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/dates/server-time" : {
      "get" : {
        "operationId" : "getServerTime",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/dates/special-date" : {
      "get" : {
        "operationId" : "getTodayDate",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "dateIdentifier",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-analyses" : {
      "get" : {
        "operationId" : "getDecisionAnalysisOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int32"
        }, {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createDecisionAnalysis",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editDecisionAnalysis",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-analyses/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-analyses/delete" : {
      "put" : {
        "operationId" : "deleteDecisionAnalyses",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/decision-analyses/{fundId}" : {
      "get" : {
        "operationId" : "getAttributionAnalysis",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fundId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/dropdowns/{entityType}" : {
      "get" : {
        "operationId" : "searchEntities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "entityType",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "payload",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/executables" : {
      "get" : {
        "tags" : [ "18 Executables" ],
        "summary" : "View all executables",
        "description" : "This will list all executables.",
        "operationId" : "getAllExecutables",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/IdDscDto"
              }
            }
          },
          "403" : {
            "description" : "User is not allowed to view a list of executables"
          }
        }
      }
    },
    "/executables/{executableId}/events" : {
      "get" : {
        "tags" : [ "18 Executables" ],
        "summary" : "Get events for an executable",
        "description" : "This will return all possible events for an executable",
        "operationId" : "getExecutableEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "executableId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WorkflowEventDto"
              }
            }
          },
          "403" : {
            "description" : "User is not allowed to view an executable"
          }
        }
      }
    },
    "/fx-sets" : {
      "get" : {
        "operationId" : "getFxSetsOverview",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editFxSets",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/fx-sets/delete" : {
      "put" : {
        "operationId" : "deleteFxSets",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-benchmarks" : {
      "get" : {
        "operationId" : "getGipsBenchmarkForOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createGipsBenchmark",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editGipsBenchmark",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-benchmarks/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-benchmarks/delete" : {
      "put" : {
        "operationId" : "deleteGipsBenchmarks",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-benchmarks/search" : {
      "get" : {
        "operationId" : "searchGipsBenchmarks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-benchmarks/{gipsBenchmarkId}" : {
      "get" : {
        "operationId" : "getGipsBenchmark",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsBenchmarkId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites" : {
      "get" : {
        "operationId" : "getGipsCompositesForOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createGipsComposite",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editGipsComposite",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/copy/{gipsCompositeId}" : {
      "post" : {
        "operationId" : "copyGipsComposite",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsCompositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/defaults" : {
      "get" : {
        "operationId" : "getCompositeConfigurationDefaults",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/delete" : {
      "put" : {
        "operationId" : "deleteGipsComposites",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/member-type/search" : {
      "get" : {
        "operationId" : "searchGipsCompositeMemberTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/search" : {
      "get" : {
        "operationId" : "searchGipsComposites",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/{gipsCompositeId}" : {
      "get" : {
        "operationId" : "getGipsComposite",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsCompositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/{gipsCompositeId}/disclosures" : {
      "get" : {
        "operationId" : "getGipsCompositeDisclosures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsCompositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editGipsCompositeDisclosures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsCompositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/{gipsCompositeId}/disclosures/delete" : {
      "put" : {
        "operationId" : "deleteGipsCompositeDisclosures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsCompositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/{gipsCompositeId}/members" : {
      "get" : {
        "operationId" : "getGipsCompositeMembers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsCompositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editGipsCompositeMembers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsCompositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-composites/{gipsCompositeId}/members/delete" : {
      "put" : {
        "operationId" : "deleteGipsCompositeMembers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsCompositeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosuregroups" : {
      "get" : {
        "operationId" : "getGipsDisclosureGroupsForOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createGipsDisclosureGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editGipsDisclosureGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosuregroups/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosuregroups/delete" : {
      "put" : {
        "operationId" : "deleteGipsDisclosureGroups",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosuregroups/row-ordering" : {
      "put" : {
        "operationId" : "editRowOrdering",
        "consumes" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosuregroups/search" : {
      "get" : {
        "operationId" : "searchGipsDisclosuresGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "typeFilter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosuregroups/{gipsDisclosureGroupId}" : {
      "get" : {
        "operationId" : "getGipsDisclosureGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsDisclosureGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosuregroups/{gipsDisclosureGroupId}/disclosures" : {
      "get" : {
        "operationId" : "getGipsDisclosuresInGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsDisclosureGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editGipsDisclosuresInGroup",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsDisclosureGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosures" : {
      "get" : {
        "operationId" : "getGipsDisclosuresForOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createGipsDisclosure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editGipsDisclosure",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosures/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosures/delete" : {
      "put" : {
        "operationId" : "deleteGipsDisclosures",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosures/link-types" : {
      "get" : {
        "operationId" : "searchGipsDisclosureLinkTypes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosures/search" : {
      "get" : {
        "operationId" : "searchGipsDisclosures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "typeFilter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosures/wildcards" : {
      "get" : {
        "operationId" : "searchGipsDisclosureWildcards",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-disclosures/{gipsDisclosureId}" : {
      "get" : {
        "operationId" : "getGipsDisclosure",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsDisclosureId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-firms" : {
      "get" : {
        "operationId" : "getGipsFirmForOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createGipsFirm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editGipsFirm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-firms/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-firms/copy/{gipsFirmId}" : {
      "post" : {
        "operationId" : "copyGipsFirm",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsFirmId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-firms/delete" : {
      "put" : {
        "operationId" : "deleteGipsFirms",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-firms/search" : {
      "get" : {
        "operationId" : "searchGipsFirms",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-firms/{gipsFirmId}" : {
      "get" : {
        "operationId" : "getGipsFirm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsFirmId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-firms/{gipsFirmId}/disclosures" : {
      "get" : {
        "operationId" : "getGipsFirmDisclosures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsFirmId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editGipsFirmDisclosures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsFirmId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-firms/{gipsFirmId}/disclosures/delete" : {
      "put" : {
        "operationId" : "deleteGipsFirmDisclosures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsFirmId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-portfolios" : {
      "get" : {
        "operationId" : "getGipsPortfoliosForOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createPortfolio",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editGipsPortfolio",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-portfolios/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-portfolios/defaults" : {
      "get" : {
        "operationId" : "getPortfolioConfigurationDefaults",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-portfolios/delete" : {
      "put" : {
        "operationId" : "deletePortfolios",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-portfolios/search" : {
      "get" : {
        "operationId" : "searchGipsPortfolios",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gips-portfolios/{gipsPortfolioId}" : {
      "get" : {
        "operationId" : "getPortfolio",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "gipsPortfolioId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gipsdata/categories" : {
      "get" : {
        "operationId" : "getInputDataCategories",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gipsdata/column-definitions" : {
      "get" : {
        "operationId" : "getColumnDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gipsdata/data" : {
      "get" : {
        "operationId" : "getData",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lastRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gipsdata/data/delete" : {
      "put" : {
        "operationId" : "deleteData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gipsdata/data/delete-all" : {
      "put" : {
        "operationId" : "deleteAllData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gipsdata/export/{table}" : {
      "get" : {
        "operationId" : "exportGipsData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clientTimeZone",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gipsdata/import" : {
      "post" : {
        "operationId" : "importInputData",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/octet-stream" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gipsdata/search" : {
      "get" : {
        "operationId" : "getSearchValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "tableName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "columnName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/gipsdata/tables" : {
      "get" : {
        "operationId" : "getAdvancedTables",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "category",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/health" : {
      "get" : {
        "operationId" : "getHealth",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/hedge-variants" : {
      "get" : {
        "operationId" : "getHedgeVariantOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createHedgeVariant",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editHedgeVariant",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/hedge-variants/copy/{hedgeVariantId}" : {
      "post" : {
        "operationId" : "copyHedgeVariant",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hedgeVariantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/hedge-variants/delete" : {
      "put" : {
        "operationId" : "deleteHedgeVariants",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/hedge-variants/non-default-hedge-ratios" : {
      "put" : {
        "operationId" : "editNonDefaultHedgeRatios",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/hedge-variants/non-default-hedge-ratios/delete" : {
      "put" : {
        "operationId" : "deleteNonDefaultHedgeRatios",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/hedge-variants/search" : {
      "get" : {
        "operationId" : "searchHedgeVariants",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/hedge-variants/{hedgeVariantId}" : {
      "get" : {
        "operationId" : "getHedgeVariant",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hedgeVariantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/hedge-variants/{hedgeVariantId}/non-default-hedge-ratios" : {
      "get" : {
        "operationId" : "getNonDefaultHedgeRatios",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "hedgeVariantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/holiday-calendars/gips/search" : {
      "get" : {
        "operationId" : "searchGipsEntities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/holiday-calendars/search" : {
      "get" : {
        "operationId" : "searchEntities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/indices" : {
      "get" : {
        "operationId" : "getIndicesOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createIndex",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editIndexWithPath",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/indices/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/indices/defaults" : {
      "get" : {
        "operationId" : "getIndexDefaultConfiguration",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/indices/delete" : {
      "put" : {
        "operationId" : "deleteIndices",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/indices/search" : {
      "get" : {
        "operationId" : "searchIndices",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "typeFilter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/indices/{indexId}" : {
      "get" : {
        "operationId" : "getIndex",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "indexId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "typeFilter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/indices/{indexId}/latest-rebal-weights" : {
      "get" : {
        "operationId" : "getLatestRebalancingWeights",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "indexId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/indices/{indexId}/latest-reset-values" : {
      "get" : {
        "operationId" : "getLatestResettingValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "indexId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/indices/{indexId}/{path}" : {
      "get" : {
        "operationId" : "getIndexWithPath",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "indexId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "path",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "typeFilter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/indices/{path}" : {
      "put" : {
        "operationId" : "editIndex",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "path",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/inputdata/categories" : {
      "get" : {
        "operationId" : "getInputDataCategories",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/inputdata/column-definitions" : {
      "get" : {
        "operationId" : "getColumnDefinitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/inputdata/data" : {
      "get" : {
        "operationId" : "getData",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lastRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/inputdata/data/delete" : {
      "put" : {
        "operationId" : "deleteData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/inputdata/data/delete-all" : {
      "put" : {
        "operationId" : "deleteAllData",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/inputdata/export/{table}" : {
      "get" : {
        "operationId" : "exportInputData",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "table",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clientTimeZone",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/inputdata/import" : {
      "post" : {
        "operationId" : "importInputData",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/octet-stream" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/inputdata/search" : {
      "get" : {
        "operationId" : "getSearchValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "tableName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "columnName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/inputdata/tables" : {
      "get" : {
        "operationId" : "getInputDataTables",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "category",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/jobs" : {
      "post" : {
        "tags" : [ "16 Jobs" ],
        "summary" : "Create a job",
        "description" : "Send a JSON representation of the job. Example: \n`{\"name\":\"Job\",\"executable\":{\"id\":1020315}}`\n\nThe following parameters are allowed in the JSON for the job request:\n\n| Parameter    | Value                                                         |\n| ------------ | ------------------------------------------------------------- |\n| name         | Name of the job.                                              |\n| executable   | The executable which must be run.                             |\n",
        "operationId" : "createJob",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Job",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JobDto"
          }
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JobDto"
            }
          },
          "400" : {
            "description" : "Invalid job input"
          },
          "403" : {
            "description" : "User is not allowed to create a job"
          }
        }
      },
      "put" : {
        "tags" : [ "16 Jobs" ],
        "summary" : "Edit a job",
        "description" : "Edit a job. It will overwrite the existing job corresponding to that ID.",
        "operationId" : "editJob",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Job",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/JobDto"
          }
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JobDto"
            }
          },
          "400" : {
            "description" : "Invalid job input"
          },
          "403" : {
            "description" : "User is not allowed to edit a job"
          },
          "404" : {
            "description" : "Job not found"
          }
        }
      }
    },
    "/jobs/scheduled" : {
      "get" : {
        "tags" : [ "16 Jobs" ],
        "summary" : "Get scheduled jobs",
        "description" : "Get a list of all jobs currently scheduled.",
        "operationId" : "getScheduledJobs",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/JobDto"
              }
            }
          },
          "403" : {
            "description" : "User is not allowed to view scheduled jobs"
          }
        }
      }
    },
    "/jobs/{jobId}" : {
      "get" : {
        "tags" : [ "16 Jobs" ],
        "summary" : "Get a job",
        "description" : "Get a job.",
        "operationId" : "getJob",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "Job ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JobDto"
            }
          },
          "400" : {
            "description" : "Invalid job ID"
          }
        }
      },
      "delete" : {
        "tags" : [ "16 Jobs" ],
        "summary" : "Delete a job",
        "description" : "Delete and thereby unschedule a job.",
        "operationId" : "deleteJob",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "jobId",
          "in" : "path",
          "description" : "Job ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JobDto"
            }
          },
          "400" : {
            "description" : "Invalid job ID"
          },
          "403" : {
            "description" : "User is not allowed to delete a job"
          }
        }
      }
    },
    "/look-through" : {
      "get" : {
        "operationId" : "getLookThroughItems",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "SECURITY", "INDEX" ]
        }, {
          "name" : "id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editLookThroughItems",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/look-through/delete" : {
      "put" : {
        "operationId" : "deleteLookThroughItems",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/look-through/types" : {
      "get" : {
        "operationId" : "getLookThroughFromOptions",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/nodes" : {
      "get" : {
        "operationId" : "searchFundNodes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fundId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "excludeNodesWithPortfolio",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "excludeOrphans",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createNode",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editNode",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/nodes/{nodeId}" : {
      "get" : {
        "operationId" : "getNode",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "operationId" : "deleteNode",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/notifications" : {
      "get" : {
        "tags" : [ "19 Notifications" ],
        "summary" : "Get notifications",
        "description" : "Get notifications.",
        "operationId" : "getNotificationsForCurrentUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of notifications",
          "required" : false,
          "type" : "integer",
          "default" : 100,
          "format" : "int64"
        }, {
          "name" : "lastSeenNotificationId",
          "in" : "query",
          "description" : "Return only notifications with a higher id than lastSeenNotificationId",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/NotificationDto"
            }
          }
        }
      }
    },
    "/notifications/amount-new" : {
      "get" : {
        "tags" : [ "19 Notifications" ],
        "summary" : "Get the amount of new notifications",
        "description" : "Get the amount of new notifications.",
        "operationId" : "getNewNotificationAmount",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/AmountNewNotificationsDto"
            }
          }
        }
      }
    },
    "/notifications/last-seen" : {
      "get" : {
        "tags" : [ "19 Notifications" ],
        "summary" : "Get the id of the last seen notification",
        "description" : "Get the id of the last seen notification.",
        "operationId" : "getLastSeenNotificationId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LastSeenNotificationDto"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "19 Notifications" ],
        "summary" : "Set the last seen notification",
        "description" : "Send a JSON request with the id of the last seen notification. It will overwrite the existing last seen notification.\nExample: \n`{\"lastSeenNotificationId\":12345}`\n\nThe following parameters are allowed in the JSON request:\n\n| Parameter           | Value                                    |\n| ------------------- | ---------------------------------------- |\n| lastSeenNotificationId            | Id of the last seen notification. |",
        "operationId" : "setLastSeenNotificationForUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/LastSeenNotificationDto"
            }
          },
          "400" : {
            "description" : "Invalid notification id"
          }
        }
      }
    },
    "/pearl-gips" : {
      "get" : {
        "tags" : [ "12 GIPS" ],
        "summary" : "Request a GIPS report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"compositeId\":\"COMP_F2\",\"startDates\":[\"2018-01-01\"],\"showDecomposition\":\"1\",\"currency\":\"BASE\",\"measures\":[\"API~FIRST_TRADE_DATE\",\"API~REPORTDATE\",\"CK~GIPS_OUTPUT_CCY_ID\",\"CK~GIPS_DSC\"]}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter         | Value                                                        |\n| ----------------- | ------------------------------------------------------------ |\n| compositeId       | The identifier of the GIPS composite for which the decomposition must be returned. |\n| startDates        | A date, or list of dates, indicating the start of the report interval(s). The date(s) can be absolute (YYYY-MM-DD), relative to the report date (MTD, QTD, YTD, INC), or x periods back (xM, xQ, xY). |\n| reportDate        | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: GIPS Latest Report Date) |\n| measures          | A list of measure identifiers; every measure will be represented in a separate column. |\n| currency          | (optional) Whether the measures must be shown in the base currency (BASE) or in a precalculated alternative currency (example: EUR), if available. |\n| showDecomposition | (optional) If 1, the decomposition is shown. If 0, only the results on composite level are shown. (Default: 1) |",
        "operationId" : "getMainTableReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MainTableReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/pearl-gips-dataview" : {
      "get" : {
        "tags" : [ "15 GIPS Data View" ],
        "summary" : "Request a GIPS Data View report",
        "description" : "Send a JSON representation of the report request. The only thing you define for a GIPS data view report is the view that it should work on. Example: \n\n`{\"viewName\":\"V_GIPS_FIRM_COMP\"}`\n\nThe following parameters are allowed in the JSON for the data view request:\n\n| Parameter           | Value                                    |\n| ------------------- | ---------------------------------------- |\n| viewName            | Name of the data view from which data must be fetched. |",
        "operationId" : "getGeneralDataViewReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Data view parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DataViewReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this data view"
          }
        }
      }
    },
    "/pearl-gips-disclosures" : {
      "get" : {
        "tags" : [ "14 GIPS Disclosures" ],
        "summary" : "Request GIPS Disclosures for a GIPS Composite",
        "description" : "Send a JSON representation of the disclosures request. Example: \n\n`{\"compositeId\":\"COMP_F2\",\"startDate\":\"2017-04-01\",\"currency\":\"BASE\"}`\n\nThe following parameters are allowed in the JSON for the disclosures request:\n\n| Parameter                | Value                                                        |\n| ------------------------ | ------------------------------------------------------------ |\n| compositeId              | The identifier of the GIPS composite for which the disclosures must be returned. |\n| startDate                | A date that indicates the first date of the report interval. A start date may be absolute (YYYY-MM-DD) or relative to the report date:  MTD, QTD, YTD, INC or x periods back (xM, xQ, xY). |\n| reportDate               | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: GIPS Latest Report Date) |\n| currency                 | (optional) Whether currency wildcards in the disclosure text should be shown as the base currency of the composite (BASE) or as a precalculated alternative currency (example: EUR), if available. |\n| includeDisclosureList    | (optional) A list of identifiers of disclosures that must always be returned, irrespective of their relation to the composite. |\n| excludeDisclosureList    | (optional) A list of identifiers of disclosures that must never be returned, irrespective of their relation to the composite. |",
        "operationId" : "getMainTableReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GipsDisclosuresReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/pearl-gips-timeseries" : {
      "get" : {
        "tags" : [ "13 GIPS Time Series" ],
        "summary" : "Request a GIPS Time Series report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"compositeId\":\"COMP_F1\",\"startDate\":\"2018-01-01\",\"currency\":\"BASE\",\"cumulationIntervals\":[\"SINGLE\",\"FULL\",\"YTD\",\"20180201\"],\"measures\":[\"API~FIRST_TRADE_DATE\",\"API~REPORTDATE\",\"CK~GIPS_DSC\",\"CK~GIPS_OUTPUT_CCY_ID\"],\"periodicity\":\"Q\"}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                | Value                                                        |\n| ------------------------ | ------------------------------------------------------------ |\n| compositeId              | The identifier of the GIPS composite for which the time series table must be returned. |\n| startDate                | A date that indicates the first date of the report interval. A start date may be absolute (YYYY-MM-DD) or relative to the report date:  MTD, QTD, YTD, INC or x periods back (xM, xQ, xY). |\n| reportDate               | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: GIPS Latest Report Date) |\n| measures                 | A list of measure identifiers; every measure will be represented in a separate column. |\n| currency                 | (optional) Whether the measures must be shown in the base currency (BASE) or in a precalculated alternative currency (example: EUR), if available. |\n| decompositionValue       | (optional) The decomposition value for which the time series table must be returned. |\n| cumulationIntervals      | (optional) A list with period lengths for measures. SINGLE = single period (default); FULL = cumulative since start; other cumulates: MTD, QTD, YTD, INC; rolling x periods: xM, xQ, xY. |\n| periodicity              | (optional) The desired periodicity: ALL (= composite periodicity), D, W, M, Q, Y (Default: ALL).  |",
        "operationId" : "getTimeSeriesReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TimeSeriesReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/periodicities/search" : {
      "get" : {
        "operationId" : "searchPeriodicities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/periodicities/secondary/search" : {
      "get" : {
        "operationId" : "searchSecondaryPeriodicities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "primaryPeriodicityId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios" : {
      "get" : {
        "operationId" : "getPortfoliosForOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createPortfolio",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editPortfolio",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/cashflow-timing-exceptions" : {
      "get" : {
        "operationId" : "getCashflowTimingExceptions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolio",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editCashFlowTimingExceptions",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/cashflow-timing-exceptions/delete" : {
      "put" : {
        "operationId" : "deleteCashflowTimingExceptions",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/copy/{portfolioId}" : {
      "post" : {
        "operationId" : "copyPortfolio",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/defaults" : {
      "get" : {
        "operationId" : "getPortfolioConfigurationDefaults",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/delete" : {
      "put" : {
        "operationId" : "deletePortfolios",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/search" : {
      "post" : {
        "operationId" : "searchPortfolios",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/securities" : {
      "get" : {
        "operationId" : "searchSecurities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/{pfId}/securities" : {
      "get" : {
        "operationId" : "searchSecuritiesForPortfolio",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "pfId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/{portfolioId}" : {
      "get" : {
        "operationId" : "getPortfolio",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/portfolios/{portfolioId}/names" : {
      "get" : {
        "operationId" : "getPortfolioNames",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "portfolioId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/prlba" : {
      "get" : {
        "tags" : [ "01 Breakdown Attribution" ],
        "summary" : "Request a Breakdown Attribution report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"breakdownName\":\"5 level breakdown\",\"breakdownPath\":\"@EQ@STOCK@Isin1\",\"startDates\":[\"YTD\"],\"idpId\":\"IDP_Y\",\"currency\":\"LOCAL\",\"measures\":[\"CK~CCY_ID\",\"CK~MI_DSC\"],\"secGroup\":\"BM_Y_EQ_EU_DE\"}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                   | Value                                    |\n| --------------------------- | ---------------------------------------- |\n| idpId                       | The identifier of the fund (IDP) on which the breakdown is defined. |\n| secGroup                    | The portfolio (SECGRP) within the fund on which the breakdown is defined. |\n| reportDate                  | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: Latest Report Date) |\n| measures                    | A list of measure identifiers; every measure will be represented in a separate column. |\n| currency                    | (optional) Whether the measures must be shown in the base currency (BASE), in the local currency (LOCAL), or in a precalculated alternative currency (example: EUR), if available. |\n| startDates                  | A date, or list of dates, indicating the start of the report interval(s). The date(s) can be absolute (YYYY-MM-DD), relative to the report date (DTD, WTD, MTD, QTD, YTD, INC, INCM), or x periods back (xD, xW, xM, xQ, xY). |\n| maxHierarchyDepth           | (optional) If not all report levels must be returned, this indicates the maximum number of displayed levels underneath the top. (Default: no limit) |\n| breakdownName               | The name of the breakdown that must be returned. |\n| breakdownPath               | (optional) In a multi-level breakdown this path of breakdown values uniquely defines which node is the parent node of the returned attribution. Example: @EQ@FUT (Default: top of the hierarchy) |\n| showMeasuresBeforeInception | (optional) If 1, numbers for measures corresponding with reporting intervals that start before inception are shown. If 0, these measures are left empty. If null or omitted, measures are always shown. |",
        "operationId" : "getBreakDownAttributionReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MainTableReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/prlbats" : {
      "get" : {
        "tags" : [ "02 Breakdown Attribution Time Series" ],
        "summary" : "Request a Breakdown Attribution Time Series report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"breakdownName\":\"Brkdwn IDP Pr PF vs MI\",\"breakdownPath\":\"@EQ@EU\",\"parentChildIndicator\":\"C\",\"startDate\":\"2009-01-01\",\"cumulationIntervals\":[\"SINGLE\",\"FULL\"],\"periodicity\":\"TDW\",\"idpId\":\"IDP_Y\",\"currency\":\"BASE\",\"measures\":[\"CK~CCY_ID\",\"CK~PF_BA_MV_END\",\"CK~XS_BA_ALLOC_EFF\"],\"secGroup\":\"BM_Y\"}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                   | Value                                    |\n| --------------------------- | ---------------------------------------- |\n| idpId                       | The identifier of the fund (IDP) for which the time series table must be returned. |\n| secGroup                    | The portfolio (SECGRP) within the fund on which the breakdown is defined. |\n| reportDate                  | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: Latest Report Date) |\n| measures                    | A list of measure identifiers; every measure will be represented in a separate column. |\n| currency                    | (optional) Whether the measures must be shown in the base currency (BASE), in the local currency (LOCAL), or in a precalculated alternative currency (example: EUR), if available. |\n| startDate                   | A date indicating the start of the report interval. The date can be absolute (YYYY-MM-DD), relative to the report date (DTD, WTD, MTD, QTD, YTD, INC, INCM), or x periods back (xD, xW, xM, xQ, xY). |\n| cumulationIntervals         | (optional) A list with period lengths for measures. SINGLE = single period (default); FULL = cumulative since start; other cumulates: DTD, WTD, MTD, QTD, YTD, INC, INCM; rolling x periods: xD, xW, xM, xQ, xY. |\n| periodicity                 | (optional) The desired periodicity: ALL (= fund periodicity), D, W, M, Q, Y (Default: ALL). |\n| breakdownName               | The name of the breakdown that must be returned. |\n| breakdownPath               | (optional) The path of breakdown values to the segment that is used as the top of the report; all nodes above it are not shown. Example: @EQ@FUT (Default: top of the breakdown hierarchy). |\n| parentChildIndicator        | (optional) Whether effects must be calculated for the node as a parent to the lower level (P), or as a child to the higher level (C). (Default: P, unless only child effects are available, then C) |\n| showMeasuresBeforeInception | (optional) If 1, numbers for measures corresponding with reporting intervals that start before inception are shown. If 0, these measures are left empty. If null or omitted, measures are always shown. |",
        "operationId" : "getBreakDownAttributionTimeSeriesReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TimeSeriesReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/prlco" : {
      "get" : {
        "tags" : [ "10 Currency Overlay" ],
        "summary" : "Request a Currency Overlay report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"idpId\":\"IDP_F1\",\"startDates\":[\"2018-01-01\"],\"reportDate\":\"2018-01-09\",\"measures\":[\"CK~DSC\",\"CK~CCY_ID\"],\"segments\":[\"TOTAL\"]}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                   | Value                                    |\n| --------------------------- | ---------------------------------------- |\n| idpId                       | The identifier of the fund (IDP). |\n| startDates                  | A date, or list of dates, indicating the start of the report interval(s). The date(s) can be absolute (YYYY-MM-DD), relative to the report date (DTD, WTD, MTD, QTD, YTD, INC, INCM), or x periods back (xD, xW, xM, xQ, xY). |\n| reportDate                  | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: Latest Report Date) |\n| measures                    | A list of measure identifiers; every measure will be represented in a separate column. |\n| segments                    | (optional) A list of currency identifiers to include in the report. Use the value TOTAL to include the total segment. If omitted or null, all segments are returned. |\n| showMeasuresBeforeInception | (optional) If 1, numbers for measures corresponding with reporting intervals that start before inception are shown. If 0, these measures are left empty. If null or omitted, measures are always shown. |",
        "operationId" : "getCurrencyOverlayReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MainTableReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/prlcots" : {
      "get" : {
        "tags" : [ "11 Currency Overlay Time Series" ],
        "summary" : "Request a Decision Time Series report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"idpId\":\"IDP_F1\",\"startDate\":\"2018-01-01\",\"reportDate\":\"2018-01-09\",\"measures\":[\"CK~DSC\",\"CK~CCY_ID\"],\"segment\":\"TOTAL\",\"cumulationIntervals\":[\"SINGLE\"],\"periodicity\":\"TDW\"}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                   | Value                                    |\n| --------------------------- | ---------------------------------------- |\n| idpId                       | The identifier of the fund (IDP). |\n| startDate                   | A date indicating the start of the report interval. The date can be absolute (YYYY-MM-DD), relative to the report date (DTD, WTD, MTD, QTD, YTD, INC, INCM), or x periods back (xD, xW, xM, xQ, xY). |\n| reportDate                  | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: Latest Report Date) |\n| measures                    | A list of measure identifiers; every measure will be represented in a separate column. |\n| segment                     | (optional) The currency identifier of the segment, or TOTAL to indicate the total segment. If omitted or null, the total level of the currency overlay report is used. |\n| cumulationIntervals         | (optional) A list with period lengths for measures. SINGLE = single period (default); FULL = cumulative since start; other cumulates: DTD, WTD, MTD, QTD, YTD, INC, INCM; rolling x periods: xD, xW, xM, xQ, xY. |\n| periodicity                 | (optional) The desired periodicity: ALL (= fund periodicity), D, W, M, Q, Y (Default: ALL). |\n| showMeasuresBeforeInception | (optional) If 1, numbers for measures corresponding with reporting intervals that start before inception are shown. If 0, these measures are left empty. If null or omitted, measures are always shown. |",
        "operationId" : "getCurrencyOverlayTimeSeriesReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TimeSeriesReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/prld" : {
      "get" : {
        "tags" : [ "08 Decision" ],
        "summary" : "Request a Decision report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"idpId\":\"IDP_F1\",\"startDates\":[\"2018-01-01\"],\"reportDate\":\"2018-01-09\",\"measures\":[\"CK~DSC\",\"CK~CCY_ID\"],\"decision\":\"TACT_GRP\",\"currency\":\"BASE\"}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                   | Value                                    |\n| --------------------------- | ---------------------------------------- |\n| idpId                       | The identifier of the fund (IDP). |\n| startDates                  | A date, or list of dates, indicating the start of the report interval(s). The date(s) can be absolute (YYYY-MM-DD), relative to the report date (DTD, WTD, MTD, QTD, YTD, INC, INCM), or x periods back (xD, xW, xM, xQ, xY). |\n| reportDate                  | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: Latest Report Date) |\n| measures                    | A list of measure identifiers; every measure will be represented in a separate column. |\n| decision                    | (optional) The name of the decision label or group. |\n| currency                    | (optional) Whether the measures must be shown in the base currency (BASE) or in the local currency (LOCAL). |\n| showMeasuresBeforeInception | (optional) If 1, numbers for measures corresponding with reporting intervals that start before inception are shown. If 0, these measures are left empty. If null or omitted, measures are always shown. |",
        "operationId" : "getDecisionReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MainTableReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/prldts" : {
      "get" : {
        "tags" : [ "09 Decision Time Series" ],
        "summary" : "Request a Decision Time Series report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"idpId\":\"IDP_F1\",\"startDate\":\"2018-01-01\",\"reportDate\":\"2018-01-09\",\"measures\":[\"CK~DSC\",\"CK~CCY_ID\"],\"decision\":\"TACT_GRP\",\"currency\":\"BASE\", \"cumulationIntervals\":[\"SINGLE\"],\"periodicity\":\"TDW\"}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                   | Value                                    |\n| --------------------------- | ---------------------------------------- |\n| idpId                       | The identifier of the fund (IDP). |\n| startDate                   | A date indicating the start of the report interval. The date can be absolute (YYYY-MM-DD), relative to the report date (DTD, WTD, MTD, QTD, YTD, INC, INCM), or x periods back (xD, xW, xM, xQ, xY). |\n| reportDate                  | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: Latest Report Date) |\n| measures                    | A list of measure identifiers; every measure will be represented in a separate column. |\n| decision                    | (optional) The name of the decision label or group. |\n| currency                    | (optional) Whether the measures must be shown in the base currency (BASE) or in the local currency (LOCAL). |\n| cumulationIntervals         | (optional) A list with period lengths for measures. SINGLE = single period (default); FULL = cumulative since start; other cumulates: DTD, WTD, MTD, QTD, YTD, INC, INCM; rolling x periods: xD, xW, xM, xQ, xY. |\n| periodicity                 | (optional) The desired periodicity: ALL (= fund periodicity), D, W, M, Q, Y (Default: ALL). |\n| showMeasuresBeforeInception | (optional) If 1, numbers for measures corresponding with reporting intervals that start before inception are shown. If 0, these measures are left empty. If null or omitted, measures are always shown. |",
        "operationId" : "getDecisionTimeSeriesReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TimeSeriesReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/prldv" : {
      "get" : {
        "tags" : [ "05 General Data View" ],
        "summary" : "Request a General Data View report",
        "description" : "Send a JSON representation of the report request. The only thing you define for a general data view report is the view that is should work on. Example: \n\n`{\"viewName\":\"V_DATAVIEW_BMPF_PROPS\"}`\n\nThe following parameters are allowed in the JSON for the data view request:\n\n| Parameter           | Value                                    |\n| ------------------- | ---------------------------------------- |\n| viewName            | Name of the data view from which data must be fetched. |",
        "operationId" : "getGeneralDataViewReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Data view parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/DataViewReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this data view"
          }
        }
      }
    },
    "/prlfi" : {
      "get" : {
        "tags" : [ "06 Fixed Income Attribution" ],
        "summary" : "Request a Fixed Income Attribution report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"breakdownName\":\"FIPA Credits\",\"startDates\":[\"YTD\"],\"idpId\":\"IDP_X_FI_CREDITS\",\"currency\":\"BASE\",\"measures\":[\"CK~CCY_ID\",\"CK~MI_DSC\"],\"secGroup\":\"BM_X_FI\"}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                   | Value                                    |\n| --------------------------- | ---------------------------------------- |\n| idpId                       | The identifier of the fund (IDP) on which the breakdown is defined. |\n| secGroup                    | The portfolio (SECGRP) within the fund on which the breakdown is defined. |\n| reportDate                  | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: Latest Report Date) |\n| measures                    | A list of measure identifiers; every measure will be represented in a separate column. |\n| currency                    | (optional) Whether the measures must be shown in the base currency (BASE), in the local currency (LOCAL), or in a precalculated alternative currency (example: EUR), if available. |\n| startDates                  | A date, or list of dates, indicating the start of the report interval(s). The date(s) can be absolute (YYYY-MM-DD), relative to the report date (DTD, WTD, MTD, QTD, YTD, INC, INCM), or x periods back (xD, xW, xM, xQ, xY). |\n| maxHierarchyDepth           | (optional) If not all report levels must be returned, this indicates the maximum number of displayed levels underneath the top. (Default: no limit) |\n| breakdownName               | The name of the breakdown that must be returned. |\n| showMeasuresBeforeInception | (optional) If 1, numbers for measures corresponding with reporting intervals that start before inception are shown. If 0, these measures are left empty. If null or omitted, measures are always shown. |",
        "operationId" : "getFiBreakDownAttributionReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MainTableReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/prlfits" : {
      "get" : {
        "tags" : [ "07 Fixed Income Attribution Time Series" ],
        "summary" : "Request a Fixed Income Attribution Time Series report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"breakdownName\":\"FIPA CREDITS\",\"breakdownPath\":\"@FI@AAA\",\"startDate\":\"2009-01-01\",\"cumulationIntervals\":[\"SINGLE\",\"FULL\"],\"periodicity\":\"TDW\",\"idpId\":\"IDP_X_FIPA_CREDITS\",\"currency\":\"BASE\",\"measures\":[\"CK~CCY_ID\",\"CK~PF_FIA_RET\",\"CK~XS_FIA_TOTAL_EFF\"],\"secGroup\":\"BM_X_FI\"}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                   | Value                                    |\n| --------------------------- | ---------------------------------------- |\n| idpId                       | The identifier of the fund (IDP) for which the time series table must be returned. |\n| secGroup                    | The portfolio (SECGRP) within the fund on which the breakdown is defined. |\n| reportDate                  | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: Latest Report Date) |\n| measures                    | A list of measure identifiers; every measure will be represented in a separate column. |\n| currency                    | (optional) Whether the measures must be shown in the base currency (BASE), in the local currency (LOCAL), or in a precalculated alternative currency (example: EUR), if available. |\n| startDate                   | A date indicating the start of the report interval. The date can be absolute (YYYY-MM-DD), relative to the report date (DTD, WTD, MTD, QTD, YTD, INC, INCM), or x periods back (xD, xW, xM, xQ, xY). |\n| cumulationIntervals         | (optional) A list with period lengths for measures. SINGLE = single period (default); FULL = cumulative since start; other cumulates: DTD, WTD, MTD, QTD, YTD, INC, INCM; rolling x periods: xD, xW, xM, xQ, xY. |\n| periodicity                 | (optional) The desired periodicity: ALL (= fund periodicity), D, W, M, Q, Y (Default: ALL). |\n| breakdownName               | The name of the breakdown that must be returned. |\n| breakdownPath               | (optional) The path of breakdown values to the segment that is used as the top of the report; all nodes above it are not shown. Example: @FI@AAA (Default: top of the breakdown hierarchy). |\n| showMeasuresBeforeInception | (optional) If 1, numbers for measures corresponding with reporting intervals that start before inception are shown. If 0, these measures are left empty. If null or omitted, measures are always shown. |",
        "operationId" : "getFipaBreakDownAttributionTimeSeriesReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TimeSeriesReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/prlh" : {
      "get" : {
        "tags" : [ "03 Fund Hierarchy" ],
        "summary" : "Request a Fund Hierarchy report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"startDates\":[\"2008-02-15\"],\"idpId\":\"IDP_X\",\"reportDate\":\"2009-04-10\",\"measures\":[\"CK~CCY_ID\",\"CK~MI_DSC\",\"CK~PF_MV_END\",\"CK~PF_TOTAL_RET_IH\"]}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                   | Value                                    |\n| --------------------------- | ---------------------------------------- |\n| idpId                       | The identifier of the fund (IDP) for which the hierarchy must be returned. |\n| secGroup                    | (optional) If the table must not show the entire hierarchy but only a branch, this indicates the portfolio (SECGRP) that is the top of the branch. |\n| reportDate                  | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: Latest Report Date) |\n| measures                    | A list of measure identifiers; every measure will be represented in a separate column. |\n| currency                    | (optional) Whether the measures must be shown in the base currency of the fund, BASE, or in the local currency of the portfolio, LOCAL (Default: BASE). |\n| startDates                  | A date, or list of dates, indicating the start of the report interval(s). The date(s) can be absolute (YYYY-MM-DD), relative to the report date (DTD, WTD, MTD, QTD, YTD, INC, INCM), or x periods back (xD, xW, xM, xQ, xY). |\n| maxHierarchyDepth           | (optional) If not all report levels must be returned, this indicates the maximum number of displayed levels underneath the top. (Default: no limit) |\n| showMeasuresBeforeInception | (optional) If 1, numbers for measures corresponding with reporting intervals that start before inception are shown. If 0, these measures are left empty. If null or omitted, measures are always shown. |",
        "operationId" : "getMainTableReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/MainTableReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/prlhts" : {
      "get" : {
        "tags" : [ "04 Fund Hierarchy Time Series" ],
        "summary" : "Request a Fund Hierarchy Time Series report",
        "description" : "Send a JSON representation of the report request. Example: \n\n`{\"startDate\":\"2009-02-15\",\"cumulationIntervals\":[\"SINGLE\"],\"periodicity\":\"W\",\"idpId\":\"IDP_Y\",\"measures\":[\"API~FIRST_TRADE_DATE\",\"API~REPORTDATE\",\"CK~CCY_ID\",\"CK~MI_DSC\",\"CK~PF_MV_END\",\"CK~PF_TOTAL_GAIN_IH\", \"CK~PF_TOTAL_RET_IH\",\"CK~XS_TOTAL_RET_IH\"]}`\n\nThe following parameters are allowed in the JSON for the report request:\n\n| Parameter                   | Value                                    |\n| --------------------------- | ---------------------------------------- |\n| idpId                       | The identifier of the fund (IDP) for which the time series table must be returned. |\n| secGroup                    | (optional) If the table must not show the top portfolio (SECGRP) of the fund, this indicates the portfolio for which the time series table is shown. |\n| reportDate                  | (optional) A date (YYYY-MM-DD) which is the final date of the report interval. (Default: Latest Report Date) |\n| measures                    | A list of measure identifiers; every measure will be represented in a separate column. |\n| currency                    | (optional) Whether the measures must be shown in the base currency of the fund, BASE, or in the local currency of the portfolio, LOCAL (Default: BASE). |\n| startDate                   | A date indicating the start of the report interval. The date can be absolute (YYYY-MM-DD), relative to the report date (DTD, WTD, MTD, QTD, YTD, INC, INCM), or x periods back (xD, xW, xM, xQ, xY). |\n| cumulationIntervals         | (optional) A list with period lengths for measures. SINGLE = single period (default); FULL = cumulative since start; other cumulates: DTD, WTD, MTD, QTD, YTD, INC, INCM; rolling x periods: xD, xW, xM, xQ, xY. |\n| periodicity                 | (optional) The desired periodicity: ALL (= fund periodicity), D, W, M, Q, Y (Default: ALL). |\n| showMeasuresBeforeInception | (optional) If 1, numbers for measures corresponding with reporting intervals that start before inception are shown. If 0, these measures are left empty. If null or omitted, measures are always shown. |",
        "operationId" : "getTimeSeriesReport",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "parameters",
          "in" : "query",
          "description" : "Report request parameters in JSON format",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/TimeSeriesReportData"
            }
          },
          "400" : {
            "description" : "Invalid report request input"
          },
          "403" : {
            "description" : "User is not allowed to request this report"
          }
        }
      }
    },
    "/properties" : {
      "post" : {
        "operationId" : "createPropertyLabel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editPropertyLabel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/calculate-properties" : {
      "get" : {
        "operationId" : "callPropertyCalculationEngine",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/copy/{propertyLabelId}" : {
      "post" : {
        "operationId" : "copyPropertyLabel",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "propertyLabelId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/delete" : {
      "put" : {
        "operationId" : "deletePropertyLabels",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/derived" : {
      "get" : {
        "operationId" : "getDerivedPropertiesOverview",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/gips/search" : {
      "get" : {
        "operationId" : "getGipsPropertyLabelsBySearchTerm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "showCorePropertiesAvailableForGipsFilter",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "showCompositeProperties",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "showPortfolioProperties",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/input" : {
      "get" : {
        "operationId" : "getInputPropertiesOverview",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/property-assigned-to-gips-entity" : {
      "get" : {
        "operationId" : "getGipsPropertyAssignedToComposite",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "propertyLabelId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/property-conditions" : {
      "get" : {
        "operationId" : "getPropertyConditionsForPropertyLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "propertyLabel",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editPropertyConditionsForPropertyLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/property-mappings" : {
      "get" : {
        "operationId" : "getPropertyMappingsForPropertyLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "propertyLabel",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editPropertyMappingsForPropertyLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/property-mappings/delete" : {
      "put" : {
        "operationId" : "getPropertyMappingsForPropertyLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/property-used-as-gips-composite-breakdown-or-membership" : {
      "get" : {
        "operationId" : "getPropertyUsedAsGipsPortfolioProperty",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "propertyLabelId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/property-used-in-attributions" : {
      "get" : {
        "operationId" : "getUsedInAttributions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "propertyLabelId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/property-used-in-gips-disclosures" : {
      "get" : {
        "operationId" : "getUsedInGipsDisclosures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "propertyLabelId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/property-values-rows" : {
      "get" : {
        "operationId" : "getPropertyValuesForPropertyLabel",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "propertyLabel",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lastRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editPropertyValues",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/property-values-rows/delete" : {
      "put" : {
        "operationId" : "deletePropertyValue",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/property-values/{propertyLabel}" : {
      "get" : {
        "operationId" : "getPropertyValuesBySearchTerm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "propertyLabel",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "addNotAvailable",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/search" : {
      "get" : {
        "operationId" : "getPropertyLabelsBySearchTerm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "typeFilter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "availableInAttributionsOnly",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "isFilterProperty",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "showHiddenProperties",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "categoryFilter",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/properties/{propertyId}" : {
      "get" : {
        "operationId" : "getPropertyLabelById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "propertyId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/risk-free-rates-and-virtual-hedging" : {
      "get" : {
        "operationId" : "getRiskFreeRatesOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editRiskFreeRateAndVirtualHedging",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/risk-free-rates-and-virtual-hedging/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/risk-free-rates-and-virtual-hedging/{fxSetId}/{currencyId}" : {
      "get" : {
        "operationId" : "getRiskFreeRateDetails",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fxSetId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "currencyId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/runs" : {
      "get" : {
        "tags" : [ "17 Runs" ],
        "summary" : "Get a list of all runs that have ended",
        "description" : "This will list all runs that ever started except the current run.",
        "operationId" : "getRunHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RunDto"
              }
            }
          },
          "403" : {
            "description" : "User is not allowed to request run overview."
          }
        }
      }
    },
    "/runs/search" : {
      "get" : {
        "tags" : [ "17 Runs" ],
        "operationId" : "searchRuns",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clientTimeZone",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "hasCheckResults",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/runs/status" : {
      "get" : {
        "tags" : [ "17 Runs" ],
        "summary" : "Get runs status",
        "description" : "Return the status for runs: the current run, most recent runs, queued runs and scheduled runs.",
        "operationId" : "getRunsStatus",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter",
          "required" : false,
          "type" : "string",
          "default" : "['CURRENT','RECENT','QUEUED','FUTURE']"
        }, {
          "name" : "recentRunsLimit",
          "in" : "query",
          "description" : "Maximum number of recent runs",
          "required" : false,
          "type" : "integer",
          "default" : 3,
          "format" : "int32"
        }, {
          "name" : "futureRunsLimit",
          "in" : "query",
          "description" : "Maximum number of future runs",
          "required" : false,
          "type" : "integer",
          "default" : 2,
          "format" : "int32"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RunsStatusDto"
            }
          },
          "403" : {
            "description" : "User is not allowed to request the runs status"
          }
        }
      }
    },
    "/runs/{queuedRunnableId}/cancel-queued" : {
      "delete" : {
        "tags" : [ "17 Runs" ],
        "summary" : "Remove a job runnable from the queue",
        "description" : "Jobs in the queue retrieved via the GET method of /queued-jobs will have a queuedRunnableId. This id can be used to remove this job's runnable from the queue, such that this runnable instance will not be triggered. It does NOT remove the job itself (use DELETE of /jobs instead). Any possible future runs from this job will still trigger (e.g. a daily job will still trigger a run the next day) ",
        "operationId" : "deleteQueuedRunnable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "queuedRunnableId",
          "in" : "path",
          "description" : "Id of the queued runnable to be removed from the queue. Can be retrieved from a queued job.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "403" : {
            "description" : "User is not allowed to remove queued runnables of jobs"
          }
        }
      }
    },
    "/runs/{runId}" : {
      "get" : {
        "tags" : [ "17 Runs" ],
        "summary" : "Get a run",
        "description" : "Get a run.",
        "operationId" : "getRun",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RunDto"
            }
          },
          "400" : {
            "description" : "Invalid run ID"
          }
        }
      }
    },
    "/runs/{runId}/cancel" : {
      "delete" : {
        "tags" : [ "17 Runs" ],
        "summary" : "Cancel a current run",
        "description" : "Cancels the run that is currently running. If it is currently running, the run will complete its current step, but stop after that. If it is queued and not running yet, it will NOT be removed from the queue. If it is scheduled but not queued or running yet, it will NOT be unscheduled (use unschedule job instead).",
        "operationId" : "cancelCurrentRun",
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "type" : "number"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid run id"
          },
          "403" : {
            "description" : "User is not allowed to cancel the current run"
          }
        }
      }
    },
    "/runs/{runId}/log" : {
      "get" : {
        "tags" : [ "17 Runs" ],
        "summary" : "Get the log for a run",
        "description" : "Get the log for a run.",
        "operationId" : "getRunLog",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of records",
          "required" : false,
          "type" : "integer",
          "default" : 100000,
          "format" : "int64"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter",
          "required" : false,
          "type" : "string",
          "default" : "['ERROR','WARNING','MILESTONE','CHECK_RESULT']"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RunLogEntryDto"
            }
          },
          "400" : {
            "description" : "Invalid run ID"
          }
        }
      }
    },
    "/runs/{runId}/log/export" : {
      "get" : {
        "tags" : [ "17 Runs" ],
        "summary" : "Export the log for a run",
        "description" : "Export the log for a run as an XLSX download.",
        "operationId" : "getRunLogAsExcel",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum number of records",
          "required" : false,
          "type" : "integer",
          "default" : 10000000000,
          "format" : "int64"
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter",
          "required" : false,
          "type" : "string",
          "default" : "['ERROR','WARNING','MILESTONE','CHECK_RESULT']"
        }, {
          "name" : "clientTimeZone",
          "in" : "query",
          "description" : "Timezone to use for timestamps",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "Invalid run ID"
          }
        }
      }
    },
    "/runs/{runId}/running-objects" : {
      "get" : {
        "tags" : [ "17 Runs" ],
        "summary" : "Get the running objects for a run",
        "description" : "Get the running objects for a run.",
        "operationId" : "getCurrentlyRunningObjects",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/RunDto"
            }
          },
          "400" : {
            "description" : "Invalid run ID"
          }
        }
      }
    },
    "/runs/{runId}/schedule-again" : {
      "get" : {
        "tags" : [ "17 Runs" ],
        "summary" : "Return the job definition for a run",
        "description" : "Return a job which can be used to schedule a job again.",
        "operationId" : "getScheduleRunAgainProperties",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "runId",
          "in" : "path",
          "description" : "Run ID",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "datasource",
          "in" : "query",
          "description" : "Datasource ID",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/JobDto"
            }
          },
          "400" : {
            "description" : "Invalid run ID"
          }
        }
      }
    },
    "/searcher-configuration" : {
      "get" : {
        "operationId" : "getSearcherConfiguration",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/securities" : {
      "get" : {
        "operationId" : "getListOfSecurities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "lastRow",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createSecurity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editSecurity",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/securities/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/securities/export" : {
      "get" : {
        "operationId" : "exportSecurities",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/securities/search" : {
      "get" : {
        "operationId" : "searchSecurities",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/securities/{securityId}" : {
      "get" : {
        "operationId" : "getSecurityById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "securityId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "delete" : {
        "operationId" : "deleteSecurity",
        "consumes" : [ "text/plain" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "securityId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/security-groups" : {
      "get" : {
        "operationId" : "searchSecurityGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/statementmanager/cancel" : {
      "delete" : {
        "operationId" : "cancelQuery",
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures" : {
      "get" : {
        "operationId" : "getFundsForOverview",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int32"
        }, {
          "name" : "selectedColumns",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "viewDate",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "post" : {
        "operationId" : "createFund",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editFund",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures/columns" : {
      "get" : {
        "operationId" : "getAllAvailableColumns",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures/copy" : {
      "post" : {
        "operationId" : "copyFund",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures/defaults" : {
      "get" : {
        "operationId" : "getFundDefaultValues",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures/delete" : {
      "put" : {
        "operationId" : "deleteFunds",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures/node/{nodeId}/parents-to-top" : {
      "get" : {
        "operationId" : "searchFundNodeParentsToTop",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 10000000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures/search" : {
      "get" : {
        "operationId" : "searchFunds",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int32"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "orderById",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures/{fundId}" : {
      "get" : {
        "operationId" : "getFund",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fundId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures/{fundId}/audit-trail" : {
      "get" : {
        "operationId" : "getAuditTrailForFund",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fundId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures/{fundId}/audit-trail/export" : {
      "get" : {
        "operationId" : "exportFundAuditTrail",
        "produces" : [ "application/octet-stream" ],
        "parameters" : [ {
          "name" : "fundId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "filtering",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "sorting",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "clientTimeZone",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/structures/{fundId}/structure-data" : {
      "get" : {
        "operationId" : "getFundTree",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fundId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editFundTree",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fundId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "callPropertyCalculationEngine",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/user-preferences" : {
      "get" : {
        "operationId" : "getUserPreferences",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "updateUserPreferences",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/validators/unique-attribution-analysis-name" : {
      "get" : {
        "operationId" : "validateAttributionAnalysisName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "nodeId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "analysisId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "analysisName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/validators/unique-attribution-template-name" : {
      "get" : {
        "operationId" : "validateAttributionTemplateName",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "attributionId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int64"
        }, {
          "name" : "attributionName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/validators/unique-constituent-benchmark-source-bm-id" : {
      "get" : {
        "operationId" : "validateCbmSourceId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "sourceBmId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/validators/unique-gips-id" : {
      "get" : {
        "operationId" : "validateUniqueGipsId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/validators/unique-id" : {
      "get" : {
        "operationId" : "validateUniqueId",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/validators/unique-secgrp-ids" : {
      "post" : {
        "operationId" : "validateSecurityGroupIds",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/virtual-accounting" : {
      "get" : {
        "operationId" : "getVirtualAccountingItems",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      },
      "put" : {
        "operationId" : "editVirtualAccountingItems",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/virtual-accounting/delete" : {
      "put" : {
        "operationId" : "deleteVirtualAccountingItems",
        "produces" : [ "application/json" ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/virtual-accounting/targets/search" : {
      "get" : {
        "operationId" : "searchTargets",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cap",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : 1000,
          "format" : "int64"
        }, {
          "name" : "searchTerm",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    }
  },
  "definitions" : {
    "AmountNewNotificationsDto" : {
      "type" : "object",
      "properties" : {
        "amountNewNotifications" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "BucketSource" : {
      "type" : "object",
      "required" : [ "dsc", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 500
        }
      }
    },
    "ConcatSources" : {
      "type" : "object",
      "required" : [ "propertyLabel", "sourceProperty1", "sourceProperty2" ],
      "properties" : {
        "propertyLabel" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceProperty1" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceProperty2" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "sourceProperty3" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        }
      }
    },
    "Currency" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 3
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 50
        }
      }
    },
    "DataViewReportData" : {
      "type" : "object",
      "properties" : {
        "columnDescriptions" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "cellData" : {
          "type" : "array",
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "DiscountFactor" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 20
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 100
        },
        "numberOfPeriodsPerYear" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "DiscountMethod" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 20
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 100
        }
      }
    },
    "EntityLink" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/Serializable"
        },
        "dsc" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "id2" : {
          "$ref" : "#/definitions/Serializable"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "EntityLinkStringString" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "dsc" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        },
        "id2" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "FilterConditionDto" : {
      "type" : "object",
      "properties" : {
        "ordering" : {
          "type" : "integer",
          "format" : "int64"
        },
        "logicalOperator" : {
          "type" : "string"
        },
        "propertyLabel" : {
          "$ref" : "#/definitions/PropertyLabel"
        },
        "propertyValue" : {
          "$ref" : "#/definitions/PropertyValue"
        },
        "matcherForDb" : {
          "type" : "string"
        }
      }
    },
    "GipsDisclosuresReportData" : {
      "type" : "object"
    },
    "GipsPropertyVisibility" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 30
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 50
        }
      }
    },
    "IdDscDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/Serializable"
        },
        "dsc" : {
          "type" : "string"
        }
      }
    },
    "IdDscDtoBoolean" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "boolean"
        },
        "dsc" : {
          "type" : "string"
        }
      }
    },
    "IdDscDtoLong" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "dsc" : {
          "type" : "string"
        }
      }
    },
    "IdDscDtoString" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "dsc" : {
          "type" : "string"
        }
      }
    },
    "IncludeResultComponents" : {
      "type" : "object",
      "required" : [ "dsc", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 30
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 300
        },
        "includeIncome" : {
          "type" : "boolean"
        },
        "includeFees" : {
          "type" : "boolean"
        },
        "includeTaxes" : {
          "type" : "boolean"
        },
        "includeTranscosts" : {
          "type" : "boolean"
        }
      }
    },
    "IndexDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "currency" : {
          "$ref" : "#/definitions/Currency"
        },
        "type" : {
          "$ref" : "#/definitions/IndexType"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueString"
          }
        },
        "expectedPeriodicities" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValuePeriodicity"
          }
        },
        "expectedCalendars" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueIdDscDtoString"
          }
        },
        "discountFactors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueDiscountFactor"
          }
        },
        "discountMethods" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueDiscountMethod"
          }
        },
        "spreadSources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueIdDscDtoString"
          }
        },
        "spreadSourceIndexTypes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueIndexTypeEnum"
          }
        },
        "spreadValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueBigDecimal"
          }
        },
        "spreadResetDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "spreadCalculationMethod" : {
          "$ref" : "#/definitions/SpreadCalculationMethod"
        },
        "spreadPeriod" : {
          "$ref" : "#/definitions/SpreadPeriod"
        },
        "filterConditions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FilterConditionDto"
          }
        },
        "derivedSources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueSecurityGroupDto"
          }
        },
        "resultComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueIncludeResultComponents"
          }
        },
        "lookThroughItems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LookThroughDto"
          }
        },
        "rebalancingFrequencies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueRebalancingDto"
          }
        },
        "rebalancingTimings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueIdDscDtoString"
          }
        },
        "resettingMethods" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueResettingDto"
          }
        },
        "resettingTimings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueIdDscDtoString"
          }
        },
        "calculatedInputProperties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TimeDependentSettingValueWithKeyNodePropertyDto"
            }
          }
        },
        "editableInputProperties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TimeDependentSettingValueWithKeyIdDscDtoString"
            }
          }
        },
        "derivedProperties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TimeDependentSettingValueWithKeyIdDscDtoString"
            }
          }
        },
        "propertiesUpToDate" : {
          "type" : "boolean"
        },
        "usedInLinks" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/EntityLinkStringString"
            }
          }
        }
      }
    },
    "IndexType" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 3
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 50
        }
      }
    },
    "Instrument" : {
      "type" : "object",
      "required" : [ "dsc", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 20
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 50
        }
      }
    },
    "JobDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "executableId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "executable" : {
          "$ref" : "#/definitions/IdDscDtoLong"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "scheduleCronExpression" : {
          "type" : "string"
        },
        "scheduleStartAt" : {
          "type" : "string"
        },
        "scheduleOnceOrRecurring" : {
          "type" : "string",
          "enum" : [ "ONCE", "RECURRING" ]
        },
        "scheduleNowOrFuture" : {
          "type" : "string",
          "enum" : [ "NOW", "FUTURE" ]
        },
        "scheduleFrequency" : {
          "type" : "string",
          "enum" : [ "DAILY", "WEEKLY", "MONTHLY" ]
        },
        "scheduleDays" : {
          "type" : "array",
          "uniqueItems" : true,
          "items" : {
            "type" : "string",
            "enum" : [ "SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT" ]
          }
        },
        "notifications" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/JobNotificationSettingDto"
          }
        }
      }
    },
    "JobNotificationSettingDto" : {
      "type" : "object",
      "properties" : {
        "email" : {
          "type" : "boolean"
        },
        "accountSet" : {
          "$ref" : "#/definitions/IdDscDtoLong"
        },
        "event" : {
          "$ref" : "#/definitions/IdDscDtoString"
        }
      }
    },
    "LastSeenNotificationDto" : {
      "type" : "object",
      "properties" : {
        "lastSeenNotificationId" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "LookThroughDto" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/IdDscDtoString"
        },
        "lookThroughFrom" : {
          "$ref" : "#/definitions/IdDscDtoString"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "underlyingType" : {
          "$ref" : "#/definitions/IdDscDto"
        },
        "underlying" : {
          "$ref" : "#/definitions/LookThroughUnderlyingDtoString"
        },
        "correctForDifferences" : {
          "$ref" : "#/definitions/IdDscDtoBoolean"
        }
      }
    },
    "LookThroughUnderlyingDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "$ref" : "#/definitions/Serializable"
        },
        "dsc" : {
          "type" : "string"
        }
      }
    },
    "LookThroughUnderlyingDtoString" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "dsc" : {
          "type" : "string"
        }
      }
    },
    "MainTableColumnData" : {
      "type" : "object",
      "properties" : {
        "measureHeader" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string"
        }
      }
    },
    "MainTableReportData" : {
      "type" : "object",
      "properties" : {
        "columnData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MainTableColumnData"
          }
        },
        "cellData" : {
          "type" : "array",
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "MilestoneDto" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string"
        },
        "generatedAt" : {
          "type" : "string"
        }
      }
    },
    "NodePropertyDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "dsc" : {
          "type" : "string"
        },
        "inherited" : {
          "type" : "boolean"
        }
      }
    },
    "NotificationDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timestamp" : {
          "type" : "string"
        },
        "event" : {
          "$ref" : "#/definitions/IdDscDtoString"
        },
        "checkId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "runId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "job" : {
          "type" : "string"
        },
        "step" : {
          "type" : "string"
        }
      }
    },
    "Periodicity" : {
      "type" : "object",
      "required" : [ "id", "sortOrder" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 20
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 50
        },
        "numberOfPeriodsPerYear" : {
          "type" : "integer",
          "format" : "int64"
        },
        "sortOrder" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mappedPeriodicities" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "PropertyLabel" : {
      "type" : "object",
      "required" : [ "id", "keepInSync", "name", "switchIdDescription" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "name" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 100
        },
        "category" : {
          "$ref" : "#/definitions/PropertyLabelCategory"
        },
        "type" : {
          "$ref" : "#/definitions/PropertyType"
        },
        "switchIdDescription" : {
          "type" : "boolean"
        },
        "visibleFor" : {
          "$ref" : "#/definitions/GipsPropertyVisibility"
        },
        "sortNumber" : {
          "type" : "integer"
        },
        "keepInSync" : {
          "type" : "boolean"
        },
        "bucketSource" : {
          "$ref" : "#/definitions/BucketSource"
        },
        "filter" : {
          "type" : "boolean"
        },
        "dsc" : {
          "type" : "string"
        },
        "availableInDisclosures" : {
          "type" : "boolean"
        },
        "visibleInConfigGUI" : {
          "type" : "boolean"
        },
        "visibleInDashboard" : {
          "type" : "boolean"
        },
        "concatSourceProperties" : {
          "$ref" : "#/definitions/ConcatSources"
        },
        "availableInAttributions" : {
          "type" : "boolean"
        },
        "availableInGipsFilter" : {
          "type" : "boolean"
        }
      }
    },
    "PropertyLabelCategory" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "dsc" : {
          "type" : "string"
        }
      }
    },
    "PropertyType" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 20
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 500
        }
      }
    },
    "PropertyValue" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "pk" : {
          "$ref" : "#/definitions/PropertyValuePK"
        },
        "name" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 100
        }
      }
    },
    "PropertyValuePK" : {
      "type" : "object",
      "required" : [ "propertyLabel", "propertyValue" ],
      "properties" : {
        "propertyLabel" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 20
        },
        "propertyValue" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 30
        }
      }
    },
    "RebalancingDto" : {
      "type" : "object",
      "properties" : {
        "rebalanceFrequency" : {
          "$ref" : "#/definitions/IdDscDtoString"
        },
        "period" : {
          "$ref" : "#/definitions/IdDscDtoString"
        },
        "firstRebalanceDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "ResettingDto" : {
      "type" : "object",
      "properties" : {
        "resetMethod" : {
          "$ref" : "#/definitions/IdDscDtoString"
        },
        "resetFrequency" : {
          "$ref" : "#/definitions/IdDscDtoString"
        },
        "period" : {
          "$ref" : "#/definitions/IdDscDtoString"
        },
        "firstResetDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "RunDto" : {
      "type" : "object",
      "properties" : {
        "runId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "jobId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "jobName" : {
          "type" : "string"
        },
        "executableName" : {
          "type" : "string"
        },
        "queuedRunnableId" : {
          "type" : "integer",
          "format" : "int64"
        },
        "scheduledBy" : {
          "type" : "string"
        },
        "progress" : {
          "type" : "number",
          "format" : "double"
        },
        "status" : {
          "type" : "string"
        },
        "numOfErrors" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numOfWarnings" : {
          "type" : "integer",
          "format" : "int64"
        },
        "numOfMilestones" : {
          "type" : "integer",
          "format" : "int64"
        },
        "startedAt" : {
          "type" : "string"
        },
        "endedAt" : {
          "type" : "string"
        },
        "estimatedEndTime" : {
          "type" : "string"
        },
        "duration" : {
          "type" : "string"
        },
        "reachedMilestones" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MilestoneDto"
          }
        }
      }
    },
    "RunLogEntryDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timestamp" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        },
        "stepName" : {
          "type" : "string"
        }
      }
    },
    "RunsStatusDto" : {
      "type" : "object",
      "properties" : {
        "currentRun" : {
          "$ref" : "#/definitions/RunDto"
        },
        "recentRuns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RunDto"
          }
        },
        "queuedRuns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RunDto"
          }
        },
        "futureRuns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RunDto"
          }
        }
      }
    },
    "SecurityDTO" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueString"
          }
        },
        "currencies" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueCurrency"
          }
        },
        "instruments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeDependentSettingValueInstrument"
          }
        },
        "lookThroughItems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LookThroughDto"
          }
        },
        "inputProperties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TimeDependentSettingValueWithKeyIdDscDtoString"
            }
          }
        },
        "derivedProperties" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/TimeDependentSettingValueWithKeyIdDscDtoString"
            }
          }
        },
        "propertiesUpToDate" : {
          "type" : "boolean"
        }
      }
    },
    "SecurityGroupDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "dsc" : {
          "type" : "string"
        },
        "securityGroupType" : {
          "$ref" : "#/definitions/IdDscDtoString"
        },
        "fund" : {
          "$ref" : "#/definitions/IdDscDtoString"
        }
      }
    },
    "Serializable" : {
      "type" : "object"
    },
    "SpreadCalculationMethod" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 5
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 50
        }
      }
    },
    "SpreadPeriod" : {
      "type" : "object",
      "required" : [ "id", "sortOrder" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 1,
          "maxLength" : 3
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 50
        },
        "sortOrder" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TableEditorCategory" : {
      "type" : "object",
      "required" : [ "dsc", "id" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 30
        },
        "dsc" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 100
        },
        "sorting" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "TableEditorService" : {
      "type" : "object"
    },
    "TableEditorTableDto" : {
      "type" : "object",
      "properties" : {
        "tableName" : {
          "type" : "string"
        },
        "dsc" : {
          "type" : "string"
        },
        "longDsc" : {
          "type" : "string"
        },
        "category" : {
          "type" : "string"
        },
        "sorting" : {
          "type" : "integer",
          "format" : "int32"
        },
        "editable" : {
          "type" : "boolean"
        },
        "addCopyDeleteAllowed" : {
          "type" : "boolean"
        }
      }
    },
    "TimeDependentSettingValue" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "type" : "object"
        }
      }
    },
    "TimeDependentSettingValueBigDecimal" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "type" : "number"
        }
      }
    },
    "TimeDependentSettingValueCurrency" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/Currency"
        }
      }
    },
    "TimeDependentSettingValueDiscountFactor" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/DiscountFactor"
        }
      }
    },
    "TimeDependentSettingValueDiscountMethod" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/DiscountMethod"
        }
      }
    },
    "TimeDependentSettingValueIdDscDtoString" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/IdDscDtoString"
        }
      }
    },
    "TimeDependentSettingValueIncludeResultComponents" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/IncludeResultComponents"
        }
      }
    },
    "TimeDependentSettingValueIndexTypeEnum" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "type" : "string",
          "enum" : [ "AGGREGATE", "CYD", "TRANSFER", "WITH_SPREAD", "RETURN", "PRICE", "COMPOSITE" ]
        }
      }
    },
    "TimeDependentSettingValueInstrument" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/Instrument"
        }
      }
    },
    "TimeDependentSettingValuePeriodicity" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/Periodicity"
        }
      }
    },
    "TimeDependentSettingValueRebalancingDto" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/RebalancingDto"
        }
      }
    },
    "TimeDependentSettingValueResettingDto" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/ResettingDto"
        }
      }
    },
    "TimeDependentSettingValueSecurityGroupDto" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/SecurityGroupDto"
        }
      }
    },
    "TimeDependentSettingValueString" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "TimeDependentSettingValueWithKey" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "type" : "object"
        },
        "key" : {
          "type" : "string"
        }
      }
    },
    "TimeDependentSettingValueWithKeyIdDscDtoString" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/IdDscDtoString"
        },
        "key" : {
          "type" : "string"
        }
      }
    },
    "TimeDependentSettingValueWithKeyNodePropertyDto" : {
      "type" : "object",
      "properties" : {
        "startdate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "value" : {
          "$ref" : "#/definitions/NodePropertyDto"
        },
        "key" : {
          "type" : "string"
        }
      }
    },
    "TimeSeriesColumnData" : {
      "type" : "object",
      "properties" : {
        "measureHeader" : {
          "type" : "string"
        },
        "cumulationPeriod" : {
          "type" : "string"
        }
      }
    },
    "TimeSeriesReportData" : {
      "type" : "object",
      "properties" : {
        "columnData" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TimeSeriesColumnData"
          }
        },
        "cellData" : {
          "type" : "array",
          "items" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            }
          }
        }
      }
    },
    "WorkflowEventDto" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "dsc" : {
          "type" : "string"
        }
      }
    }
  }
}